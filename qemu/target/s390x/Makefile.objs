obj-y += cpu.o cpu_models.o cpu_features.o gdbstub.o interrupt.o helper.o
obj-$(CONFIG_TCG) += translate.o cc_helper.o excp_helper.o fpu_helper.o
obj-$(CONFIG_TCG) += int_helper.o mem_helper.o misc_helper.o crypto_helper.o
obj-$(CONFIG_TCG) += vec_helper.o
obj-$(CONFIG_SOFTMMU) += machine.o ioinst.o arch_dump.o mmu_helper.o diag.o
obj-$(CONFIG_SOFTMMU) += sigp.o
obj-$(CONFIG_KVM) += kvm.o
obj-$(call lnot,$(CONFIG_KVM)) += kvm-stub.o
obj-$(call lnot,$(CONFIG_TCG)) += tcg-stub.o

# build and run feature list generator
feat-src = $(SRC_PATH)/target/$(TARGET_BASE_ARCH)/
feat-dst = $(BUILD_DIR)/$(TARGET_DIR)
ifneq ($(MAKECMDGOALS),clean)
GENERATED_FILES += $(feat-dst)gen-features.h
endif

$(feat-dst)gen-features.h: $(feat-dst)gen-features.h-timestamp
	@cmp $< $@ >/dev/null 2>&1 || cp $< $@
$(feat-dst)gen-features.h-timestamp: $(feat-dst)gen-features
	$(call quiet-command,$< >$@,"GEN","$(TARGET_DIR)gen-features.h")

$(feat-dst)gen-features: $(feat-src)gen-features.c
	$(call quiet-command,$(HOST_CC) $(QEMU_INCLUDES) -o $@ $<,"CC","$(TARGET_DIR)gen-features")

clean-target:
	rm -f gen-features.h-timestamp
	rm -f gen-features.h
	rm -f gen-features
